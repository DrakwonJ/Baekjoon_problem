#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cstring>
#include <queue>
using namespace std;
typedef struct{
	int x;
	int y;
	int d;
}pos;
int width,height;
int tomato[1000][1000];
int day = 1;
queue <pos> q;
void rotten(int h,int w, int d){
	if(h-1 >= 0 && tomato[h-1][w] == 0){
		tomato[h-1][w] = 1;
		q.push({w,h-1,d+1});
	}
	if(h+1 < height && tomato[h+1][w] == 0){
		tomato[h+1][w] = 1;
		q.push({w,h+1,d+1});
	}
	if( w-1 >= 0 &&tomato[h][w-1] == 0){
		tomato[h][w-1] = 1;
		q.push({w-1,h,d+1});
	}
	if( w+1 < width && tomato[h][w+1] == 0){
		tomato[h][w+1] = 1;
		q.push({w+1,h,d+1});
	}
}
int main(void){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	cin>>width>>height;
	for(int i=0;i<height;i++){
		for(int j=0;j<width;j++){
			cin>>tomato[i][j];
		}
	}
	int cnt = 0, day = 0, cnt_1 = 0, cntt = 0;
	for(int i=0;i<height;i++){
		for(int j=0;j<width;j++){
			if(tomato[i][j] == 0)
				cnt++;
			else if(tomato[i][j] == 1){
				q.push({j,i,1});
				cntt++;
			}
			else
				cnt_1++;
				
		}
	}
	if(cntt == height*width || cntt+cnt_1 == height*width){
		cout<<0<<endl;
		return 0;
	}
	else if(cnt_1== height*width || cnt == width*height){
		cout<<-1<<endl;
		return 0;
	}
	else{
		while(!q.empty()){
			while(q.front().d == day){
				rotten(q.front().y, q.front().x, q.front().d);
				q.pop();
			}
			day++;
		}
	}
	int emp = 0;
	for(int i=0;i<height;i++){
		for(int j=0;j<width;j++){
			if(tomato[i][j] == 0)
				emp = 1;
		}
	}
	if(emp)
		cout<<-1<<endl;
	else
		cout<<day-2<<endl;
}
