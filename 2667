#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stdio.h>
#include <cstring>
using namespace std;
int N,cnt=0;
string arr[25];
int visited[25][25] = {0, };
void travel(int x, int y){
	visited[x][y] = 1;
	cnt++;
	if(x-1>=0 && arr[x-1][y] == '1' && visited[x-1][y] == 0)
		travel(x-1,y);
	if(x+1<N && arr[x+1][y] == '1' && visited[x+1][y] == 0)
		travel(x+1, y);
	if(y-1>=0 && arr[x][y-1] == '1' && visited[x][y-1] == 0)
		travel(x,y-1);
	if(y+1<N && arr[x][y+1] == '1' && visited[x][y+1] == 0)
		travel(x,y+1);
	return;
}
int main(void){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	cin>>N;
	int ans = 0;
	vector <int> count;
	for(int i=0;i<N;i++)
		cin>>arr[i];
	for(int i=0;i<N;i++){
		for(int j=0;j<N;j++){
			if(arr[i][j] == '1' && visited[i][j] == 0){
				travel(i,j);
				count.push_back(cnt);
				ans++;
				cnt = 0;
			}
		}
	}
	cout<<ans<<endl;
	sort(count.begin(), count.end());
	for(int i=0;i<count.size();i++)
		cout<<count[i]<<endl;
	return 0;
}
