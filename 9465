#include <iostream>
#include <algorithm>
#include <stdio.h>
using namespace std;
int dy_func(int M, int arr[2][100001]){
	int ans = 0, pick=0;
	int dp[2][100001] = {0, };
	dp[0][0]=dp[1][0]=0;
	dp[0][1] = arr[0][1];
	dp[1][1] = arr[1][1];
	for(int i=1;i<=M;i++){
		dp[0][i] = max(dp[1][i-1],dp[1][i-2]) + arr[0][i];
		dp[1][i] = max(dp[0][i-1], dp[0][i-2]) + arr[1][i];
	}
	ans = max(dp[0][M],dp[1][M]);
	return ans;
}
int main(void){
	cin.tie(NULL);
	ios::sync_with_stdio(false);
	int N,M;
	cin>>N;
	long answer[N];
	for(int k=0;k<N;k++){
		cin>>M;
		int arr[2][100001] = {0, };
		for(int i=0;i<2;i++){
			for(int j=1;j<=M;j++)
				cin>>arr[i][j];
		}	
		answer[k] = dy_func(M,arr);
	}
	for(int i=0;i<N;i++)
		cout<<answer[i]<<"\n";
}
