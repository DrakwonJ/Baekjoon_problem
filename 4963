#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stdio.h>
#include <cstring>
using namespace std;
int N,M,cnt=0;
int arr[50][50] = {0, };
int visited[50][50] = {0, };
void travel(int x, int y){
	visited[x][y] = 1;
	if(x-1>=0 && y-1>=0 && arr[x-1][y-1] == 1 && visited[x-1][y-1] == 0)
		travel(x-1,y-1);
	if(x-1>=0 && y+1<N && arr[x-1][y+1] == 1 && visited[x-1][y+1] == 0)
		travel(x-1,y+1);
	if(x+1<M && y-1>=0 && arr[x+1][y-1] == 1 && visited[x+1][y-1] == 0)
		travel(x+1,y-1);
	if(x+1<M && y+1<N && arr[x+1][y+1] == 1 && visited[x+1][y+1] == 0)
		travel(x+1,y+1);
	if(x-1>=0 && arr[x-1][y] == 1 && visited[x-1][y] == 0)
		travel(x-1,y);
	if(x+1<M && arr[x+1][y] == 1 && visited[x+1][y] == 0)
		travel(x+1, y);
	if(y-1>=0 && arr[x][y-1] == 1 && visited[x][y-1] == 0)
		travel(x,y-1);
	if(y+1<N && arr[x][y+1] == 1 && visited[x][y+1] == 0)
		travel(x,y+1);
	return;
}
int main(void){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	vector <int> count;
	while(1){
		cin>>N>>M;
		if(N == 0 && M == 0)
			break;
		else{
			for(int i=0;i<M;i++){
				for(int j=0;j<N;j++)
					cin>>arr[i][j];
			}
			for(int i=0;i<M;i++){
				for(int j=0;j<N;j++){
					if(arr[i][j] == 1 && visited[i][j] == 0){
						travel(i,j);
						cnt++;
					}
				}
			}
			cout<<cnt<<endl;
			cnt = 0;
			memset(visited,0,sizeof(visited));
		}
	}	
	return 0;
}
