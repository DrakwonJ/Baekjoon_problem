#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <math.h>
#include <vector>
using namespace std;
int N,M,ans;
vector<int> broken;
bool possible(int num){
	if(num == 0){
		if(find(broken.begin(),broken.end(),0) == broken.end())
			return true;
		else
			return false;
	}
	while(num){
		if(find(broken.begin(), broken.end(), num%10) != broken.end())
			return false;
		num/=10;
	}
	return true;	
}
int length(int num){
	if(num == 0)
		return 1;
	int n = 0;
	while(num){
		n++;
		num/= 10;
	}
	return n;
}
int change(){
	int result = 987654321;
	int clone = 0;
	for(int i=0;i<1000001;i++){
		if(possible(i)){
			int click = abs(N-i);
			if(result > click){
				result = click;
				clone = i;
			}
		}
	}
	return result + length(clone);
}

int main(void){
	cin.tie(NULL);
	cin>>N>>M;
	for(int i=0;i<M;i++){
		int button;
		cin>>button;
		broken.push_back(button);
	}
	int hund = abs(N-100);
	ans = min(hund,change());
	cout<<ans;
}
