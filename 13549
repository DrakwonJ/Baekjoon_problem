#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cstring>
#include <queue>
using namespace std;
int N,K;
int arr[1000001];
queue <int> visited;

int search(){
	visited.push(N);
	arr[N] = 0;
	while(visited.empty() == 0){
		int pos = visited.front();
		visited.pop();
		if(pos == K)
			return arr[K];
		if(pos + 1 < 100001 && arr[pos+1] > arr[pos] + 1){
			arr[pos+1] = arr[pos]+1;
			visited.push(pos+1);
		}
		if(pos-1 >= 0 && arr[pos-1] > arr[pos]+1){
			arr[pos-1] = arr[pos]+1;
			visited.push(pos-1);
		}
		if(pos*2 < 100001 && arr[pos*2] > arr[pos]){
			arr[pos*2] = arr[pos];
			visited.push(pos*2);
		}
	}
}
int main(void){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	cin>>N>>K;
	int answer = 0;
	for(int i=0;i<100001;i++)
		arr[i] = 100001;
	if(N==K)
		cout<<0<<endl;
	else if(N>K)
		cout<<N-K<<endl;
	else{
		answer = search();
		cout<<answer<<endl;
	}
}
